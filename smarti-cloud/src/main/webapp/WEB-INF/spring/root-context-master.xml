<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" id="propertyConfigurer"> 
	     <beans:property name="location"> 
	         <!-- beans:value>file:${catalina.home}/conf/smarti-admin.properties</beans:value--> 
	     <beans:value>classpath:/smarti-admin.properties</beans:value> 	     </beans:property> 
	 </beans:bean>
	 	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 
	 <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <beans:property name="driverClassName" value="${jdbc.driverClassName}" />        
            <beans:property name="url" value="${jdbc.url}" />        
            <beans:property name="username" value="${jdbc.username}" />        
            <beans:property name="password" value="${jdbc.password}" />    
     </beans:bean>
 -->
	 							<!-- jcr config -->
<!-- h2 server -->

	<beans:bean class="org.h2.tools.Server" factory-method="createTcpServer" init-method="start" destroy-method="stop">
	    <beans:constructor-arg>
	        <beans:array>
	            <beans:value>-tcp</beans:value>
	            <beans:value>-tcpAllowOthers</beans:value>
	            <beans:value>-tcpPort</beans:value>
	            <beans:value>${rep.port}</beans:value>
	        </beans:array>
	    </beans:constructor-arg>
	</beans:bean> 
   

    <beans:bean id="h2ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <beans:property name="driverClassName" value="org.h2.Driver" />        
            <beans:property name="url" value="${rep.url}" />        
            <beans:property name="username" value="sa" />        
            <beans:property name="password" value="sa" />    
    </beans:bean>
 	
	<beans:bean id="repository" class="org.springframework.extensions.jcr.jackrabbit.RepositoryFactoryBean">
	  <!-- normal factory beans params -->
	  <!--  beans:property name="configuration" value="file:${catalina.home}${rep.configuration}"/-->
	  <beans:property name="configuration" value="classpath:jackrabbit-h2master.xml"/>
	  <beans:property name="homeDir" value="file:${rep.home}"/>
	</beans:bean>
	
	<!-- SessionFactory --> 

	<beans:bean id="jcrSessionFactory" class="org.springframework.extensions.jcr.jackrabbit.JackrabbitSessionFactory">
		<beans:property name="repository" ref="repository"/>
		<beans:property name="credentials">
			<beans:bean class="javax.jcr.SimpleCredentials">
				<beans:constructor-arg index="0" value="fmdba"/>
				<!-- create the credentials using a bean factory -->
				<beans:constructor-arg index="1">
				<beans:bean factory-bean="password" factory-method="toCharArray"/>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>
 		<beans:property name="sessionHolderProviderManager" ref="listProviderManager"/>
	    <!-- property name="nodeDefinitions">
		    <beans:list>
		     <beans:value>classpath:custom-nodeType.xml</beans:value>
		    </beans:list>
	    </property-->	
	  <!-- beans:property name="eventListeners">
	   <beans:list>
	    <beans:bean class="org.springframework.extensions.jcr.EventListenerDefinition">
	     <beans:property name="listener">
	      <beans:bean class="org.springframework.extensions.examples.jcr.DummyEventListener"/>
	     </beans:property>
	     <beans:property name="absPath" value="/smarticloud/applications"/>
	    </beans:bean>
	   </beans:list>
	  </beans:property-->	    			
	</beans:bean>
	
	<!-- create the password to return it as a char[] -->
	<beans:bean id="password" class="java.lang.String">
		<beans:constructor-arg index="0" value="pass"/>
	</beans:bean>

    
	<beans:bean id="jcrTemplate" class="org.springframework.extensions.jcr.JcrTemplate">
	    <beans:property name="sessionFactory" ref="jcrSessionFactory"/>
	    <beans:property name="allowCreate" value="true"/>
	</beans:bean>
	


	
	<beans:bean id="jcrMapper"
	      class="org.apache.jackrabbit.ocm.mapper.impl.annotation.AnnotationMapperImpl">
	   <beans:constructor-arg index="0">
	       	 <beans:list>
			   <beans:value>com.filemark.jcr.model.Folder</beans:value>
			   <beans:value>com.filemark.jcr.model.Asset</beans:value>
			   <beans:value>com.filemark.jcr.model.Page</beans:value>
			   <beans:value>com.filemark.jcr.model.User</beans:value>  			     			 
			   <beans:value>com.filemark.jcr.model.Role</beans:value>  			     			 
			   <beans:value>com.filemark.jcr.model.Log</beans:value>  			     			 
			   <beans:value>com.filemark.jcr.model.Djcontainer</beans:value>  			     			 
			   <beans:value>com.filemark.jcr.model.Chat</beans:value>  			     			 
			   <beans:value>com.filemark.jcr.model.Device</beans:value>  	
			</beans:list>
	   </beans:constructor-arg>
	</beans:bean>
	
<!-- 	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	    <beans:property name="basename" value="messages"></beans:property>
	</beans:bean> -->
	
<!-- 	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
	    <beans:property name="defaultLocale" value="zh_CN"></beans:property>
	</beans:bean> -->
		
	<beans:bean id="jcrTransactionManager" class="org.springframework.extensions.jcr.jackrabbit.LocalTransactionManager">
		<beans:property name="sessionFactory" ref="jcrSessionFactory"/>
	</beans:bean>

	<beans:bean id="txProxyTemplate" abstract="true" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	    <beans:property name="proxyTargetClass">
	        <beans:value>true</beans:value>
	     </beans:property>
	     <beans:property name="transactionManager" ref="jcrTransactionManager"/>
	     <beans:property name="transactionAttributes">
	       <beans:props>
	        <beans:prop key="save*">PROPAGATION_REQUIRED</beans:prop>
	        <beans:prop key="update*">PROPAGATION_REQUIRED</beans:prop>
	        <beans:prop key="add*">PROPAGATION_REQUIRED</beans:prop>
	        <beans:prop key="index*">PROPAGATION_REQUIRED</beans:prop>
	        <beans:prop key="*">PROPAGATION_REQUIRED, readOnly</beans:prop>
	       </beans:props>
	     </beans:property>
	</beans:bean>

	<beans:bean id="jcrService" parent="txProxyTemplate">
	    <beans:property name="target" ref="jcrServiceImpl">
	    </beans:property>
    </beans:bean>
    
	<beans:bean id="listProviderManager" class="org.springframework.extensions.jcr.support.ListSessionHolderProviderManager">
	     <beans:property name="providers">
	         <beans:list>
	            <!--  bean class="org.mycompany.jcr.CustomHolderProvider"/-->
	            <beans:bean class="org.springframework.extensions.jcr.jackrabbit.support.JackRabbitSessionHolderProvider"/>
	            <beans:bean class="org.springframework.extensions.jcr.support.GenericSessionHolderProvider"/>
	         </beans:list>
	     </beans:property>
	</beans:bean>

	 		 
    <beans:bean id="jcrServiceImpl" class="com.filemark.jcr.serviceImpl.JcrServicesImpl">
         <beans:property name="jcrTemplate" ref="jcrTemplate"/>
         <beans:property name="mapper" ref="jcrMapper"/>
         <beans:property name="domain" value="${smarti.domain}"/>
         <beans:property name="home" value="${smarti.home}"/>
         <beans:property name="device" value="${smarti.device}"/>         
         <beans:property name="backup" value="${smarti.backup}"/>         
         <beans:property name="cache" value="${smarti.cache}"/>              
         <beans:property name="workingDir" value="${smarti.workingDir}"/>   
         <beans:property name="asianFont" value="/fonts/NotoSansCJKsc-Regular.otf">
         </beans:property>    
    </beans:bean>
	
    <beans:bean id="jcrIndexService" class="com.filemark.jcr.serviceImpl.JcrIndexServiceImpl">
        <beans:property name="jcrService" ref="jcrService"></beans:property>
        <beans:property name="clusterId">
			<beans:value>${rep.clusterId}</beans:value>
		</beans:property>
    </beans:bean>

	<beans:bean id="transactionRepository" class="org.springframework.extensions.jcr.TransactionAwareRepository">
	     <beans:property name="allowNonTxRepository" value="true"/>
	     <beans:property name="targetFactory" ref="jcrSessionFactory"/>
	</beans:bean>
 <!-- 
	<tx:annotation-driven transaction-manager="jcrTransactionManager"/>
 -->	    

 
	<!-- JCR END -->
	 <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host">
			 <beans:value>${smarti.smtphost}</beans:value>
		</beans:property> 
		<beans:property name="username">
			 <beans:value>${smarti.emailUsername}</beans:value>
 		</beans:property> 
		<beans:property name="password">
		 	<beans:value>${smarti.emailPassword}</beans:value>
 		</beans:property> 
		<beans:property name="port" value="${smarti.smtpport}"/>
		<beans:property name="javaMailProperties">
			<beans:props>
			<beans:prop key="mail.smtp.auth">true</beans:prop>
	        <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>			
            <beans:prop key="mail.smtp.quitwait">false</beans:prop>
            <beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop>
            <beans:prop key="mail.smtp.socketFactory.fallback">false</beans:prop>
			</beans:props>
		</beans:property>	 	
	</beans:bean>
	<beans:import resource="security.xml"/>	
</beans:beans>
